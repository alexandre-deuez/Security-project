<?php
#########################################################
#Liste tous les liens présents sur un site web
#Auteur : Alexandre Deuez
#########################################################

##### FUNCTIONS #####
function GetWebsiteData($website) {
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, $website);
curl_setopt($ch, CURLOPT_HEADER, 0);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); //Recevoir les données sans les afficher
$output = curl_exec($ch);
curl_close($ch);
return $output;
}

function DisplaySourceCode($string) {
$siteDataContent = preg_split('/(<[^>]*[^\/]>)/i', $string, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);

for ($i=0;$i<count($siteDataContent);$i++) {
	echo htmlspecialchars($siteDataContent[$i])."<br>";
	}
}

//Retourne un tableau contenant tous les liens sur la page visitée
function ListAllLink($website) {

$siteData = GetWebsiteData($website); //Récupere la page html dans la var $siteData
$siteDataContent = preg_split('/(<[^>]*[^\/]>)/i', $siteData, -1, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
for ($i=0;$i<count($siteDataContent);$i++) {
	if (preg_match("/href/i", $siteDataContent[$i])) { 	//Si la chaine "href" est trouvée \b impose une limite à href. Le i rend la recherche insensible à la casse.
		if (strpos($siteDataContent[$i], "<") == 0) {
			if (strlen(utf8_decode($siteDataContent[$i])) < 200 && strlen(utf8_decode($siteDataContent[$i]))>1) { //Filtre les liens trop longs (ou scripts js...) et les liens vides
				$siteDataContent[$i] = str_replace(CHR(32),"",$siteDataContent[$i]); //Supprime tous les espaces de la chaine
				$relLink = explode("href=\"",$siteDataContent[$i]);
				$relLink = explode("\"",$relLink[1]);
				if (substr($relLink[0], 0, 1) == "/") { //Nous rajoutons l'adresse absolue en cas de liens relatifs
					$finalLink = strtolower($website.$relLink[0]);
					if (!in_array($finalLink, $linkList)){
						$linkList[] = $finalLink;
						}
					}
				elseif (substr($relLink[0], 0, strlen($website)) == $website) { //Test si nous sommes bien sur un lien du site interne.
					$finalLink = strtolower($relLink[0]);
					if (!in_array($finalLink, $linkList)) {
						$linkList[] = $finalLink;
						}
					}
				}
			}
		}
	}
	return $linkList;
}

function displayLinks($array) {
	for ($i=0;$i<count($array);$i++) {
		echo htmlspecialchars($array[$i])."<br>\n";
	}
}

function fuseArray($array1,$array2) {
for ($i=0;$i<count($array2);$i++) {
	if (!in_array($array2[$i],$array1)) //Sans doublon
		 {
		$array1[] = $array2[$i];
		}
	}
return $array1;
}

function searchNewLink($array,$cursor) {
$updatedList = array();
$updatedList = fuseArray($array,ListAllLink($array[$cursor]));
return $updatedList;
}

function estimatedProg($cursor,$array) {
$result = round(($cursor/count($array))*100);
if ($result > 100){
	$result = 100;
	}
return $result;
}

function checkDeadLink ($url) {

$a = @get_headers($url);
if ($a) {//*** On a retour : on test le header HTTP
	if (strstr($a[0],'404')) {
		return FALSE; } // Erreur 404
	else {
		return TRUE; } // OK
	}
else { return FALSE; } // Erreur accès au site
}


?>
